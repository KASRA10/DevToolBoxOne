<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>